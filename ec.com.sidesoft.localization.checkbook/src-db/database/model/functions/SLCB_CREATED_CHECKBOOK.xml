<?xml version="1.0"?>
  <database name="FUNCTION SLCB_CREATED_CHECKBOOK">
    <function name="SLCB_CREATED_CHECKBOOK" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_AD_User_ID VARCHAR2(32):='0';
  v_AD_Client_ID VARCHAR2(32);
  v_AD_Org_ID VARCHAR2(32);
  v_date DATE;


  v_CheckbookFrom  NUMBER;
  v_CheckbookTo  NUMBER;
  v_Lines NUMBER;
  V_CountLine NUMBER;
  v_CountUsedVoided NUMBER;
  v_StatusGenerate CHAR(1);
  v_CreatedCheckbook CHAR(1);

  --  Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
 
  BEGIN
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;
  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, i.AD_User_ID, p.ParameterName, p.P_String, p.P_Number, p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo
      )
    LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_AD_User_ID:=Cur_Parameter.AD_User_ID;
    END LOOP; -- Get Parameter

    SELECT AD_CLIENT_ID, AD_ORG_ID, checkbook_from, checkbook_to, UPDATEDBY, GENERATED, Created_Checkbook
    INTO v_AD_Client_ID, v_AD_Org_ID,v_CheckbookFrom, v_CheckbookTo, v_AD_User_ID, v_StatusGenerate, v_CreatedCheckbook
    FROM SLCB_CHECKBOOK where SLCB_CHECKBOOK_ID = V_Record_ID;

    IF (v_CreatedCheckbook='Y') THEN

    			SELECT 
			 COALESCE((SELECT COUNT(*) FROM SLCB_CHECKBOOKLINE WHERE STATUS IN ('U','V') AND SLCB_CHECKBOOK_ID = V_Record_ID),0)
			INTO v_CountUsedVoided
			FROM DUAL;

			
			IF v_CountUsedVoided>0 THEN
			
				RAISE_APPLICATION_ERROR(-20000, '@Slcb_ErrorReactve@');
				
				
			ELSIF v_CountUsedVoided=0 THEN 
				UPDATE  SLCB_CHECKBOOK SET generated='N', Created_Checkbook='N'  WHERE SLCB_CHECKBOOK_ID = V_Record_ID;
				DELETE FROM SLCB_CHECKBOOKLINE  WHERE SLCB_CHECKBOOK_ID = V_Record_ID;
			END IF;

    ELSE

	IF (v_CreatedCheckbook='N') THEN


		    IF (v_CheckbookFrom > v_CheckbookTo ) THEN
		    
			RAISE_APPLICATION_ERROR(-20000, '@Slcb_ValidateRangeChecks@');

		    ELSE


			SELECT 
			 COALESCE((SELECT COUNT(*) FROM SLCB_CHECKBOOKLINE WHERE STATUS IN ('U','V') AND SLCB_CHECKBOOK_ID = V_Record_ID),0)
			INTO v_CountUsedVoided
			FROM DUAL;

			
			IF v_CountUsedVoided>0 THEN

				RAISE_APPLICATION_ERROR(-20000, '@Slcb_ErrorReactve@');
				
			ELSIF v_CountUsedVoided=0 THEN 
				DELETE FROM SLCB_CHECKBOOKLINE  WHERE SLCB_CHECKBOOK_ID = V_Record_ID;
			END IF;
		    
			v_Lines:= 10;
			V_CountLine :=1;
			FOR I IN v_CheckbookFrom..v_CheckbookTo LOOP

				INSERT INTO SLCB_CHECKBOOKLINE(SLCB_CHECKBOOKLINE_ID, AD_CLIENT_ID, AD_ORG_ID, ISACTIVE, CREATED, CREATEDBY, UPDATED, UPDATEDBY, SLCB_CHECKBOOK_ID,
				LINE, CHECKNO, PAYMENTNO, STATUS, DESCRIPTION,GENERATED)
				VALUES(GET_UUID(), v_AD_Client_ID, v_AD_Org_ID,'Y', NOW(), v_AD_User_ID, NOW(),v_AD_User_ID, V_Record_ID,
				v_Lines, I , NULL,NULL,NULL,'Y');
				v_Lines:= v_Lines + 10;
				V_CountLine:= V_CountLine  + 1;
				
			END LOOP;

			UPDATE  SLCB_CHECKBOOK SET generated='Y', Created_Checkbook='Y'  WHERE SLCB_CHECKBOOK_ID = V_Record_ID;

			
		    END IF;

	END IF;
	
    END IF;


     
    v_Message := '@RowsInserted@: ' || V_CountLine || '.';
    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 1, v_Message) ;
    RETURN;
  
  END; --BODY
EXCEPTION
WHEN OTHERS THEN
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  IF(p_PInstance_ID IS NOT NULL) THEN
    AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr) ;
  END IF;
--  RAISE_APPLICATION_ERROR(-20100, v_ResultStr) ;
--  RETURN;
END SLCB_CREATED_CHECKBOOK
]]></body>
    </function>
  </database>
