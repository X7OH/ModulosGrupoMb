<?xml version="1.0"?>
  <database name="FUNCTION SSDAH_CHARGEMATERIALS">
    <function name="SSDAH_CHARGEMATERIALS" type="NULL">
      <parameter name="p_instance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[-- Logistice
    v_ResultStr VARCHAR2(2000):='';
    v_Message VARCHAR2(2000):='';
    v_Result NUMBER:=1; -- 0=failure
    v_Record_ID VARCHAR2(32);
    v_User_ID VARCHAR2(32):='0';
	
	texto		TEXT;
	Error_prom	TEXT;
	errorm		TEXT;
    
    TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
	Cur_ProductBOM	RECORD;

BEGIN

    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || P_Instance_ID);
    v_ResultStr:='PInstanceNotFound';
    AD_UPDATE_PINSTANCE(P_Instance_ID, NULL, 'Y', NULL, NULL);
    
    BEGIN --BODY
        -- Get Parameters
        v_ResultStr:='ReadingParameters';
        FOR Cur_Parameter IN (
            SELECT i.Record_ID, i.AD_User_ID, p.ParameterName, p.P_String, p.P_Number, p.P_Date
            FROM AD_PInstance i
                LEFT JOIN AD_PInstance_Para p ON i.AD_PInstance_ID = p.AD_PInstance_ID
            WHERE i.AD_PInstance_ID = P_Instance_ID
            ORDER BY p.SeqNo
        ) LOOP
            v_Record_ID := Cur_Parameter.Record_ID;
            v_User_ID := Cur_Parameter.AD_User_ID;
        END LOOP; -- Get Parameter
        
		delete from ssdah_mirror_pb
		where m_product_id = v_Record_ID;
		
		FOR Cur_ProductBOM IN(
			select * 
			from m_product_bom
			where m_product_id = v_Record_ID
		)LOOP
		
			select name 
			into Error_prom
			from m_product 
			where m_product_id = Cur_ProductBOM.m_productbom_id;
		
		INSERT INTO public.ssdah_mirror_pb(
			ssdah_mirror_pb_id, ad_client_id, ad_org_id, isactive,
			created, createdby, updated, updatedby, 
			line, m_product_id, m_productbom_id, bomqty, 
			description, bomtype, bomprice)
		VALUES (
			get_uuid(), Cur_ProductBOM.ad_client_id, Cur_ProductBOM.ad_org_id, Cur_ProductBOM.isactive,
			now(), Cur_ProductBOM.createdby, now(), Cur_ProductBOM.updatedby,
			Cur_ProductBOM.line, Cur_ProductBOM.m_product_id, Cur_ProductBOM.m_productbom_id, Cur_ProductBOM.bomqty,
			Cur_ProductBOM.description, Cur_ProductBOM.bomtype, Cur_ProductBOM.bomprice);
								
		END LOOP;
		
		
       -- RAISE_APPLICATION_ERROR(-20000, 'Revision error - ' || v_Record_ID);

        DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message);
        AD_UPDATE_PINSTANCE(P_Instance_ID, NULL, 'N', v_Result, v_Message);

        RETURN;
    END; --BODY
    
    EXCEPTION WHEN OTHERS THEN
        v_ResultStr:= '@ERROR=' || SQLERRM;
        DBMS_OUTPUT.PUT_LINE( v_ResultStr) ;
		-- RAISE LOG '%', v_ResultStr ;
		
		SELECT SUBSTRING(SQLERRM, 2, LENGTH(SQLERRM) - 2)
		into errorm;
		
		select msgtext 
		into texto
		from ad_message_trl
		where ad_message_id in (select ad_message_id 
		from ad_message 
		where value = errorm);
		IF texto is not null then
			RAISE texto || ' Producto: '|| Error_prom;
		ELSE
			RAISE Error_prom || ' - 'v_ResultStr;
		END IF;
        ROLLBACK;
        AD_UPDATE_PINSTANCE(P_Instance_ID, NULL, 'N', 0, v_ResultStr);
END SSDAH_CHARGEMATERIALS
]]></body>
    </function>
  </database>
