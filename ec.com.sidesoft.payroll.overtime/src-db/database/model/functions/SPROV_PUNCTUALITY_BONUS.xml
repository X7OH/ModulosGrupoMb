<?xml version="1.0"?>
  <database name="FUNCTION SPROV_PUNCTUALITY_BONUS">
    <function name="SPROV_PUNCTUALITY_BONUS" type="NULL">
      <parameter name="p_startdate" type="TIMESTAMP" mode="in">
        <default/>
      </parameter>
      <parameter name="p_enddate" type="TIMESTAMP" mode="in">
        <default/>
      </parameter>
      <parameter name="p_c_bpartner_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_client_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_org_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_user_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <parameter name="p_period_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[TYPE RECORD IS REF CURSOR;
Cur_overtime RECORD;

v_period_id VARCHAR2(32);
v_c_bpartner_id VARCHAR2(32);
v_client_id VARCHAR2(32);
v_org_id VARCHAR2(32);
v_user_id VARCHAR2(32);
v_startdate DATE;
v_enddate DATE;
v_ResultStr VARCHAR2(2000) := '';
v_n_insertions NUMBER;
v_Message VARCHAR2(2000):='';
v_concept_id VARCHAR2(32);
v_amount NUMBER;
v_four NUMBER;
v_six NUMBER;
v_count NUMBER;
v_noconcept NUMBER;


  BEGIN --BODY
    -- Get Parameters
    v_ResultStr := 'ReadingParameters';
    v_n_insertions := 0;    
 
	--VARIABLES
	v_period_id := p_period_id;      
	v_client_id := p_client_id;
	v_org_id := p_org_id;
	v_user_id := p_user_id; 
	v_startdate := p_startdate;
	v_enddate := p_enddate;
	v_c_bpartner_id := p_c_bpartner_id;

    select coalesce((select b.sspr_concept_id
    from sprbi_maintenance_news a
    left join sspr_concept b on b.sspr_concept_id = a.sspr_concept_id
    where b.concepttypepayroll = 'PB'),'ND')
    into v_concept_id
    from dual;

    select coalesce((select a.value
    from sprbi_maintenance_news a
    left join sspr_concept b on b.sspr_concept_id = a.sspr_concept_id
    where b.concepttypepayroll = 'PB'),0)
    into v_amount
    from dual;

    If(v_concept_id != 'ND')Then
	    For Cur_overtime in (
			select c.name, sum(b.total_arrears) as totalarrears, c.c_bpartner_id
			from sprov_employee_overtime b
			left join c_bpartner c on c.c_bpartner_id = b.c_bpartner_id
			where b.datemovement between v_startdate and v_enddate
			and (c.EM_SSPR_Specialsituation != 'RE' or c.EM_SSPR_Specialsituation is null)
			group by c.name, c.c_bpartner_id
			order by c.name, c.c_bpartner_id
	    )
	    Loop
			--Total atrasos
			v_four := 0;
			v_six := 0;
			If(Cur_overtime.totalarrears > 0)Then
				v_four := 4;
			Else
				v_four := 0;
			End If;

			--Faltas Injustifacadas
			select count(a.sprbi_maintenance_news_id)
			into v_count
			from sprov_newness a
			left join sprov_employee_overtime b on b.sprov_employee_overtime_id = a.sprov_employee_overtime_id
			left join c_bpartner c on c.c_bpartner_id = b.c_bpartner_id
			left join sprbi_maintenance_news d on d.sprbi_maintenance_news_id = a.sprbi_maintenance_news_id
			left join sspr_concept e on e.sspr_concept_id = d.sspr_concept_id
			where b.datemovement between v_startdate and v_enddate  --'01-01-2018' and '31-05-2018' --v_startdate and v_enddate 
			and b.c_bpartner_id = Cur_overtime.c_bpartner_id --'BAE96E704476463C8E54C3DA3F10E991' --Cur_overtime.c_bpartner_id
			and e.concepttypepayroll = 'UA';

			If(v_count > 0)Then
				v_six := 6;
			Else
				v_six := 0;
			End If;

			select count(*)
			into v_noconcept
			from sspr_concept_amount
			where sspr_concept_id = v_concept_id
			and c_bpartner_id = Cur_overtime.c_bpartner_id
			and c_period_id = v_period_id;

			if( v_noconcept > 0)Then

				RAISE_APPLICATION_ERROR(-20000, 'Ya existe un registro para el concepto BONO DE PUNTUALIDAD Y ASISTENCIA con el mismo periodo para el empleado ' || Cur_overtime.name);
			Else
			
				--Inserta novedades de las lineas del detalle de horas extras empleado
				INSERT INTO SSPR_Concept_Amount
				    (SSPR_Concept_Amount_ID, AD_Client_ID, AD_Org_ID, IsActive,
				    Created, CreatedBy, Updated, UpdatedBy,
				    SSPR_Concept_ID, C_BPartner_ID, C_Period_ID, Amount)
				VALUES
				    (get_uuid(), v_client_id, v_org_id, 'Y',
				    now(), v_user_id, now(), v_user_id,
				    v_concept_id, Cur_overtime.c_bpartner_id, v_period_id, (v_amount - v_four - v_six));
			
				update sprov_employee_overtime
				set processed_bonus = 'Y'				
				where datemovement between v_startdate and v_enddate
				and c_bpartner_id = Cur_overtime.c_bpartner_id;
 
			End If;
	    End Loop;
    Else 
	RAISE_APPLICATION_ERROR(-20000, 'No existe concepto tipo Bono Puntualidad y Asistencia ');
    
    End If;

    DBMS_OUTPUT.PUT_LINE('Updating PInstance - Finished ' || v_Message) ;
  				
RETURN;
END SPROV_PUNCTUALITY_BONUS
]]></body>
    </function>
  </database>
