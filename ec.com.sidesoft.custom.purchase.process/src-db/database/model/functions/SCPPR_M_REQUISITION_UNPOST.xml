<?xml version="1.0"?>
  <database name="FUNCTION SCPPR_M_REQUISITION_UNPOST">
    <function name="SCPPR_M_REQUISITION_UNPOST" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2013 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';
  v_Message VARCHAR2(2000):='';
  v_Result NUMBER:=1; -- 0=failure
  v_Record_ID VARCHAR2(32);
  v_User_ID VARCHAR2(32):='0';
  v_DocAction VARCHAR2(60);
  v_DocStatus VARCHAR2(60);
  v_Aux NUMBER;
  v_bpartner VARCHAR2(32);
  v_bpartner_blocked VARCHAR2(1):='N';
  v_inOutBlocking VARCHAR2(1):='N';
  v_bpartner_name c_bpartner.name%TYPE;
  v_productname m_product.name%TYPE;
  COUNT_STATUSLINE NUMBER;
  v_type_user VARCHAR2(60);
  --  Parameter
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    Cur_RequisitionLine RECORD;
BEGIN
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
  v_ResultStr:='PInstanceNotFound';
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, i.AD_User_ID, i.AD_Client_ID, i.AD_Org_ID,
        p.ParameterName, p.P_String, p.P_Number, p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo) LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_User_ID:=Cur_Parameter.AD_User_ID;
    END LOOP; -- Get Parameter

    SELECT DocAction, DocStatus , c_bpartner_id INTO v_DocAction, v_DocStatus, v_bpartner
    FROM M_REQUISITION
    WHERE M_REquisition_ID = v_Record_ID;
    
    /**
    * Order Closed, Voided or Reversed - No action possible
    */
    IF(v_DocStatus IN('CL', 'VO', 'RE')) THEN
      RAISE_APPLICATION_ERROR(-20000, '@AlreadyPosted@') ;
    
    ELSIF (v_DocStatus = 'CO') THEN
    select coalesce(to_char(scppr_user.type),'N/D') 
	into v_type_user
	from c_doctype 
	left join scppr_user on c_doctype.c_doctype_id = scppr_user.c_doctype_id 
	where scppr_user.ad_user_id = v_User_ID;
	If(v_type_user = 'AP' or v_type_user = 'N/D')Then
		If(v_bpartner not in(select c_bpartner_id
				from c_bpartner
				where em_scppr_approver = v_User_ID)) Then
			RAISE_APPLICATION_ERROR(-20000, 'Usuario no tiene permisos para desprocesar esta transaccion ');
		End If;
	End If;

		v_ResultStr := 'Reactivate the requisition: ' || v_Record_ID;
        	--Valida si que las lineas sean de estado diferente a Abierto
			SELECT COUNT(*) INTO COUNT_STATUSLINE
           	FROM M_RequisitionLine
           	WHERE M_Requisition_ID = v_Record_ID
           	AND ReqStatus <> 'O';
			IF (COUNT_STATUSLINE = 0) THEN
				UPDATE M_REQUISITION
				SET DocStatus = 'SCPPR_RQ',
				DocAction = 'CO',
				Updated=now(),
				UpdatedBy=v_User_ID
				WHERE M_REQUISITION_ID = v_Record_ID;
			ELSE
				RAISE_APPLICATION_ERROR(-20000, '@ActionNotAllowedHere@');
			END IF;
	ELSIF (v_DocStatus = 'SCPPR_RQ') THEN

	select coalesce(to_char(scppr_user.type),'N/D') 
	into v_type_user
	from c_doctype 
	left join scppr_user on c_doctype.c_doctype_id = scppr_user.c_doctype_id 
	where scppr_user.ad_user_id = v_User_ID;
	If(v_type_user = 'AP' or v_type_user = 'N/D')Then
		If(v_bpartner not in(select c_bpartner_id
				from c_bpartner
				where em_scppr_approver = v_User_ID)) Then
			RAISE_APPLICATION_ERROR(-20000, 'Usuario no tiene permisos para desprocesar esta transaccion ');
		End If;
	End If;
	
        		v_ResultStr := 'Reactivate the requisition: ' || v_Record_ID;
        		UPDATE M_REQUISITION
        		SET DocStatus = 'DR',
            		DocAction = 'SCPPR_RQ',
            		Updated=now(),
            		UpdatedBy=v_User_ID
        		WHERE M_REQUISITION_ID = v_Record_ID;
			
      ELSE
        RAISE_APPLICATION_ERROR(-20000, '@ActionNotAllowedHere@');
      
    END IF;
  END; --BODY
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('M_RequisitionLine_Post error: ' || v_ResultStr);
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr);
END SCPPR_M_REQUISITION_UNPOST
]]></body>
    </function>
  </database>
