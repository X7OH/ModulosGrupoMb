<?xml version="1.0"?>
  <database name="FUNCTION SSRS_REQUESTREAPRLINE_TRG">
    <function name="SSRS_REQUESTREAPRLINE_TRG" type="VARCHAR">
      <body><![CDATA[v_DocStatus VARCHAR(60);
  v_ReqStatus VARCHAR(60);
  v_OrderedQty NUMBER;
  v_productname m_product.name%TYPE;
  v_isgeneric   CHAR(1);

BEGIN
    
    IF AD_isTriggerEnabled()='N' THEN IF TG_OP = 'DELETE' THEN RETURN OLD; ELSE RETURN NEW; END IF; 
    END IF;


  IF TG_OP = 'INSERT' THEN
    SELECT DocStatus, new.ReqStatus, 0 INTO v_DocStatus, v_ReqStatus, v_OrderedQty
    FROM SSRS_requestreaprovision
    WHERE SSRS_requestreaprovision_id = new.SSRS_requestreaprovision;
  ELSE
    SELECT DocStatus, old.ReqStatus, old.OrderedQty INTO v_DocStatus, v_ReqStatus, v_OrderedQty
    FROM SSRS_requestreaprovision
    WHERE SSRS_requestreaprovision_id = old.SSRS_requestreaprovision_id;
  END IF;

  IF (v_DocStatus = 'CL') THEN
    RAISE_APPLICATION_ERROR(-20000, '@20527@');
  END IF;

  IF (v_DocStatus = 'CO' AND TG_OP = 'INSERT') THEN
    RAISE_APPLICATION_ERROR(-20000, '@20525@');
  END IF;
  
  IF (v_DocStatus = 'CO' AND TG_OP = 'DELETE') THEN
    RAISE_APPLICATION_ERROR(-20000, '@20501@');
  END IF;

  IF (v_ReqStatus = 'P') THEN
    RAISE_APPLICATION_ERROR(-20000, '@20526@');
  END IF;

  IF (v_ReqStatus <> 'O') THEN
    RAISE_APPLICATION_ERROR(-20000, '@20520@');
  END IF;

  IF (TG_OP = 'DELETE' AND v_OrderedQty <> 0 )THEN
    RAISE_APPLICATION_ERROR(-20000, '@20521@');
  END IF;

  IF TG_OP = 'UPDATE' THEN
    IF ((COALESCE(old.SSRS_requestreaprovision_id, '0') <> COALESCE(new.SSRS_requestreaprovision_id,'0'))
       OR (COALESCE(old.M_Product_ID, '-1') <> COALESCE(new.M_Product_ID, '-1'))
       OR (COALESCE(old.M_PriceList_ID, '-1') <> COALESCE(new.M_PriceList_ID, '-1'))
       OR (COALESCE(old.C_Currency_ID, '-1') <> COALESCE(new.C_Currency_ID, '-1'))
       OR (COALESCE(old.Qty, -1) <> COALESCE(new.Qty, -1))
       OR (COALESCE(old.PriceList, -1) <> COALESCE(new.PriceList, -1))
       OR (COALESCE(old.PriceActual, -1) <> COALESCE(new.PriceActual, -1 ))
       OR (COALESCE(old.Discount, -1) <> COALESCE(new.Discount, -1 ))
       OR (COALESCE(old.LineNetAmt, -1) <> COALESCE(new.LineNetAmt, -1 ))
       OR (COALESCE(old.C_BPartner_ID, '0') <> COALESCE(new.C_BPartner_ID, '0' ))
       OR (COALESCE(old.C_UOM_ID, '0') <> COALESCE(new.C_UOM_ID, '0' ))
       OR (COALESCE(old.M_Product_UOM_ID, '0') <> COALESCE(new.M_Product_UOM_ID, '0' ))
       OR (COALESCE(old.QuantityOrder, -1) <> COALESCE(new.QuantityOrder, -1 ))
       OR (COALESCE(old.M_AttributeSetInstance_ID, '-1') <> COALESCE(new.M_AttributeSetInstance_ID, '-1' ))
       OR (COALESCE(old.NeedByDate, TO_DATE('01-01-1900', 'DD-MM-YYYY')) <> COALESCE(new.NeedByDate, TO_DATE('01-01-1900', 'DD-MM-YYYY')))) THEN
      IF (v_DocStatus = 'CO') THEN
        RAISE_APPLICATION_ERROR(-20000, '@20522@');
      ELSIF (v_OrderedQty <> 0 ) THEN
        RAISE_APPLICATION_ERROR(-20000, '@20523@');
      END IF;
    END IF;
  END IF;

  IF (TG_OP = 'INSERT' OR TG_OP = 'UPDATE') THEN
    IF (NEW.m_product_id IS NOT NULL) THEN
      SELECT isgeneric, name INTO v_isgeneric, v_productname
      FROM m_product
      WHERE m_product_id = NEW.m_product_id;
      IF (v_isgeneric = 'Y') THEN
        RAISE_APPLICATION_ERROR(-20000, '@CannotUseGenericProduct@');
      END IF;
    END IF;
  END IF;
IF TG_OP = 'DELETE' THEN RETURN OLD; ELSE RETURN NEW; END IF;
END SSRS_REQUESTREAPRLINE_TRG
]]></body>
    </function>
  </database>
