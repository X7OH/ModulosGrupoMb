<?xml version="1.0"?>
  <database name="FUNCTION SSRS_RESUPPLY_NEW_POST">
    <function name="SSRS_RESUPPLY_NEW_POST" type="NULL">
      <parameter name="p_pinstance_id" type="VARCHAR" mode="in">
        <default/>
      </parameter>
      <body><![CDATA[/*************************************************************************
* The contents of this file are subject to the Openbravo  Public  License
* Version  1.1  (the  "License"),  being   the  Mozilla   Public  License
* Version 1.1  with a permitted attribution clause; you may not  use this
* file except in compliance with the License. You  may  obtain  a copy of
* the License at http://www.openbravo.com/legal/license.html
* Software distributed under the License  is  distributed  on  an "AS IS"
* basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
* License for the specific  language  governing  rights  and  limitations
* under the License.
* The Original Code is Openbravo ERP.
* The Initial Developer of the Original Code is Openbravo SLU
* All portions are Copyright (C) 2001-2013 Openbravo SLU
* All Rights Reserved.
* Contributor(s):  ______________________________________.
************************************************************************/
  -- Logistice
  v_ResultStr VARCHAR2(2000):='';     
  v_Message VARCHAR2(2000):='';       
  v_Result NUMBER:=1;                -- 0=failure
  v_Record_ID VARCHAR2(32);           
  v_User_ID VARCHAR2(32):='0';        
  v_m_warehouse VARCHAR2(32);         
  v_resupply_pos VARCHAR2(32);        
  v_Count  NUMBER;
  --  Parameter 
  TYPE RECORD IS REF CURSOR;
    Cur_Parameter RECORD;
    Cur_ResupplyLine RECORD;
    Cur_stockproduct RECORD;

BEGIN
  DBMS_OUTPUT.PUT_LINE('Updating PInstance - Processing ' || p_PInstance_ID) ;
  v_ResultStr:='PInstanceNotFound';
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'Y', NULL, NULL) ;

  BEGIN --BODY
    -- Get Parameters
    v_ResultStr:='ReadingParameters';
    FOR Cur_Parameter IN
      (SELECT i.Record_ID, i.AD_User_ID, i.AD_Client_ID, i.AD_Org_ID,
        p.ParameterName, p.P_String, p.P_Number, p.P_Date
      FROM AD_PInstance i
      LEFT JOIN AD_PInstance_Para p
        ON i.AD_PInstance_ID=p.AD_PInstance_ID
      WHERE i.AD_PInstance_ID=p_PInstance_ID
      ORDER BY p.SeqNo) LOOP
      v_Record_ID:=Cur_Parameter.Record_ID;
      v_User_ID:=Cur_Parameter.AD_User_ID;
    END LOOP; -- Get Parameter

	--Sacar variables de cabecera
	SELECT m_warehouse_id ,ssrs_resupply_pos_id
	INTO v_m_warehouse, v_resupply_pos
	FROM SSRS_RESUPPLY
	WHERE Ssrs_Resupply_ID = v_Record_ID;
	
	-- INICIO IF VERIFICAR SI HAY REGISTROS EN REAPROVISIONAMIENTO PDV
	IF(v_resupply_pos is not null or v_resupply_pos <> '')THEN

		-- INICIO LOOP BUSQUEDA DE LAS LINEAS DEL PEDIDO
		FOR Cur_ResupplyLine IN
					(
					SELECT 	l.ssrs_resupplyline_id,
							l.line,
							l.qty,
							l.Orderedqty,
							l.Quantityorder,
							p.m_product_id,
							p.name
					FROM ssrs_resupplyline l
					LEFT join m_product p on p.m_product_id = l.m_product_id
					WHERE ssrs_resupply_id = v_Record_ID) 
		LOOP

			SELECT COALESCE(
						(SELECT 
						count(*)
						FROM M_Product p  
						JOIN M_Storage_Detail s ON (s.M_Product_ID=p.M_Product_ID) 
						INNER JOIN M_Locator l on s.M_Locator_ID = l.M_Locator_ID
						LEFT JOIN m_attributeset aset ON p.m_attributeset_id = aset.m_attributeset_id	
						WHERE p.IsActive='Y'	--Producto activo
						AND p.IsStocked='Y'	-- es Almacenado
						AND l.m_warehouse_id = v_m_warehouse 
						AND p.M_Product_id = Cur_ResupplyLine.m_product_id
						AND s.QtyOnHand >0
						AND (NOT (coalesce(p.attrsetvaluetype, '-') <> 'F'
							AND COALESCE(aset.isoneattrsetvalrequired, '-') = 'Y'
							AND COALESCE(s.m_attributesetinstance_id, '0') = '0'
							AND QTYONHAND = 0
							AND COALESCE(QTYORDERONHAND,0) = 0
							AND PREQTYONHAND=0
							AND COALESCE(PREQTYORDERONHAND,0) = 0))

						),0)
			into v_Count
			FROM DUAL;

			-- INICIO CONTADOR PARA VERIFICAR QUE HAY STOCK DEL PRODUCTO EN LA BODEGA DE LA CABECERA
			IF(v_Count> 0)THEN
			
				FOR Cur_stockproduct IN (SELECT s.M_Product_ID,--St.IDProducto
							SUM(COALESCE(s.QtyOnHand, 0)) AS QtyOnHand,--St.Cantidad Disponible
							SUM(s.QTYORDERONHAND) AS QtyOnHandOrder,--Cantidad de pedido disponible
							s.C_UOM_ID,--ST.Unidad
							s.M_Product_UOM_ID--,--Unidad de pedido
							,l.m_warehouse_id
						FROM M_Product p  
						JOIN M_Storage_Detail s ON (s.M_Product_ID=p.M_Product_ID) 
						INNER JOIN M_Locator l on s.M_Locator_ID = l.M_Locator_ID
						LEFT JOIN m_attributeset aset ON p.m_attributeset_id = aset.m_attributeset_id	
						WHERE p.IsActive='Y'	--Producto activo
						AND p.IsStocked='Y'	-- es Almacenado
						AND l.m_warehouse_id = v_m_warehouse
						AND p.M_Product_id = Cur_ResupplyLine.m_product_id
						AND s.QtyOnHand >0
						AND (NOT (coalesce(p.attrsetvaluetype, '-') <> 'F'
							AND COALESCE(aset.isoneattrsetvalrequired, '-') = 'Y'
							AND COALESCE(s.m_attributesetinstance_id, '0') = '0'
							AND QTYONHAND = 0
							AND COALESCE(QTYORDERONHAND,0) = 0
							AND PREQTYONHAND=0
							AND COALESCE(PREQTYORDERONHAND,0) = 0))
						GROUP BY s.M_Product_ID,--St.IDProducto
							s.C_UOM_ID,--ST.Unidad
							s.M_Product_UOM_ID--Unidad de pedido
							,l.m_warehouse_id
						)
					
				LOOP	

					IF(Cur_ResupplyLine.qty <= Cur_stockproduct.QtyOnHand)THEN

						-- SE ACRTUALIZA LAS LINEAS DEL PEDIDO DE REAPROVISIONAMIENTO PDV 
						-- CANTIDAD DESPACHADA PRINCIPAL Y CANTIDAD SECUNDARIA PEDIDA
						UPDATE ssrs_resupplyposline 
						SET qty_dispatched =Cur_ResupplyLine.qty, secqty_dispatched=Cur_ResupplyLine.Quantityorder,status_for_line='CO'
						WHERE ssrs_resupply_pos_id = v_resupply_pos
						AND m_product_id =Cur_ResupplyLine.m_product_id;

						-- ACTUALIZAR LA CABECERA A COMPLETADO
						UPDATE SSRS_RESUPPLY SET docstatus='CO' WHERE Ssrs_Resupply_ID = v_Record_ID;
						
					ELSE 
						RAISE_APPLICATION_ERROR(-20000, 'El registro con número de línea '||Cur_ResupplyLine.line||' pide un registro superior al disponible en stock.') ;
					END IF;

				END LOOP;

			ELSE

				RAISE_APPLICATION_ERROR(-20000, 'El stock del producto '||Cur_ResupplyLine.name||' es de 0.') ;

			END IF;
			-- FIN CONTADOR PARA VERIFICAR QUE HAY STOCK DEL PRODUCTO EN LA BODEGA DE LA CABECERA
			
		END LOOP; 
		-- FIN LOOP BUSQUEDA DE LAS LINEAS DEL PEDIDO

	END IF;
	-- FIN IF VERIFICAR SI HAY REGISTROS EN REAPROVISIONAMIENTO PDV
    
  END; --BODY
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', v_Result, v_Message) ;
EXCEPTION
WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('M_RequisitionLine_Post error: ' || v_ResultStr);
  v_ResultStr:= '@ERROR=' || SQLERRM;
  DBMS_OUTPUT.PUT_LINE(v_ResultStr) ;
  ROLLBACK;
  AD_UPDATE_PINSTANCE(p_PInstance_ID, NULL, 'N', 0, v_ResultStr);
END SSRS_RESUPPLY_NEW_POST
]]></body>
    </function>
  </database>
